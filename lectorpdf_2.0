import os
import pdfplumber
import csv
import re
import sys
sys.stdout.reconfigure(encoding='utf-8')

# Carpeta que contiene las subcarpetas con los archivos PDF
carpeta_raiz = "vur/"

# Nombre del archivo CSV de salida
archivo_csv = "informacion_propiedades.csv"

# Lista para almacenar la información
informacion = []

# Itera a través de las subcarpetas
for subdir, _, archivos in os.walk(carpeta_raiz):
    for archivo_pdf in archivos:
        if archivo_pdf.endswith(".pdf") and "B" in archivo_pdf:
            pdf_path = os.path.join(subdir, archivo_pdf)

            with pdfplumber.open(pdf_path) as pdf:
                info_dict = {"Nombre de Archivo": archivo_pdf}

                for page in pdf.pages:
                    text = page.extract_text()
                    # Extraer el número después de "Matrícula(s) Matriz:"
                    matricula_match = re.search(r"Matrícula\(s\) Matriz:(.*?)([A-Za-z]|$)", text, re.DOTALL)
                    if matricula_match:
                        matriculas = matricula_match.group(1).strip().replace(" ", ",")
                        info_dict["Matrícula matriz"] = matriculas if matriculas else None

                    # Extraer número después de "Area de terreno Hectareas:"
                    area_match = re.search(r"Area de terreno Hectareas:(.*?)(?:\n|\w|$)", text)
                    if area_match:
                        area_terreno = area_match.group(1).strip()
                        info_dict["Área de Terreno (Hectáreas)"] = area_terreno if area_terreno else None

                    # Buscar la palabra "Servidumbre"
                    servidumbre_match = re.search(r"Servidumbre", text)
                    if servidumbre_match:
                        info_dict["Servidumbre"] = "SI"
                    else:
                        info_dict["Servidumbre"] = "NO"

                    # Extraer la dirección antes del salto de línea
                    direccion_match = re.search(r"Dirección Actual del Inmueble:(.*?)(?:\n|$)", text)
                    if direccion_match:
                        direccion = direccion_match.group(1).strip()
                        info_dict["Dirección"] = direccion if direccion else None
                    #print (text)

                # Añadir la información al listado
                informacion.append(info_dict)
#print (info_dict)
# Guardar la información en un archivo CSV
with open(archivo_csv, "w", newline="", encoding="utf-8") as csv_file:
    columnas = ["Nombre de Archivo", "Matrícula matriz", "Área de Terreno (Hectáreas)", "Servidumbre", "Dirección"]
    csv_writer = csv.DictWriter(csv_file, fieldnames=columnas)
    csv_writer.writeheader()

    for info in informacion:
        csv_writer.writerow(info)

print(f"Se ha extraído y guardado la información de {len(informacion)} propiedades en {archivo_csv}.")
